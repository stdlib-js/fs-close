// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";function i(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})})),t}var s=i(Object.freeze({__proto__:null,default:{}})),o=s.close,a=t.isPrimitive,d=r,l=n;var u=function(e,t){if(!a(e))throw new TypeError(l("invalid argument. First argument must be a valid file descriptor (nonnegative integer). Value: `%s`.",e));if(!d(t))throw new TypeError(l("invalid argument. Last argument must be a function. Value: `%s`.",t));o(e,t)},m=s.closeSync,c=t.isPrimitive,f=n;var p=u,v=function(e){if(!c(e))throw new TypeError(f("invalid argument. Must provide a valid file descriptor (nonnegative integer). Value: `%s`.",e));try{m(e)}catch(e){return e}};e(p,"sync",v);var g=p;export{g as default,v as sync};
//# sourceMappingURL=index.mjs.map
